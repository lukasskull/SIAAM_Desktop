/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package content;

import inc.config;
import java.sql.Connection;

import java.sql.ResultSet;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author LUKAS PUTRA DIANTAMA
 */
public class Data_konsumen extends javax.swing.JInternalFrame {

    Connection conn = config.Conn();
    Statement st;
    ResultSet rs;
    
    private void tampilData(){
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("No");
        model.addColumn("ID");
        model.addColumn("Nama Konsumen");
        model.addColumn("Tanggal Lahir");
        model.addColumn("Jenis Kelamin");
        model.addColumn("Telepon");
        bTambah.setEnabled(true);
        try{
            String sql = "SELECT * FROM sys_customer";
            st = conn.createStatement();
            rs = st.executeQuery(sql);
            
            int no = 0;
            while(rs.next()){
                no++;
                model.addRow(new Object []{
                    no,rs.getString("customer_id"), rs.getString("customer_name"),rs.getString("customer_birthdate"),rs.getString("customer_gender"),rs.getString("customer_phone"),
                });
            }
            tData.setModel(model);
        }catch(Exception e){
            System.out.println(e.getMessage());
        }
    }
    /**
     * Creates new form Data_konsumen
     */
    public Data_konsumen() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tNama = new javax.swing.JTextField();
        tHp = new javax.swing.JTextField();
        tId = new javax.swing.JTextField();
        bTambah = new javax.swing.JButton();
        bUbah = new javax.swing.JButton();
        bHapus = new javax.swing.JButton();
        bReset = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tData = new javax.swing.JTable()
        {
            public boolean isCellEditable(int rowIndex, int colIndex)
            {
                return false;
            }
        };
        bBatal = new javax.swing.JButton();
        tCari = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tTgl = new com.toedter.calendar.JDateChooser();
        cJk = new javax.swing.JComboBox<>();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jLabel2.setText("ID");

        jLabel3.setText("Nama Konsumen");

        jLabel4.setText("Tanggal Lahir");

        jLabel5.setText("Jenis Kelamin");

        jLabel6.setText("Nomor Telepon");

        tId.setEditable(false);

        bTambah.setText("Tambah");
        bTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bTambahActionPerformed(evt);
            }
        });

        bUbah.setText("Ubah");
        bUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bUbahActionPerformed(evt);
            }
        });

        bHapus.setText("Hapus");
        bHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bHapusActionPerformed(evt);
            }
        });

        bReset.setText("Reset");
        bReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bResetActionPerformed(evt);
            }
        });

        jScrollPane1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        tData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "ID", "Nama", "Tanggal Lahir", "Jenis Kelamin", "Telepon"
            }
        ));
        tData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tDataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tData);

        bBatal.setText("Batal");
        bBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBatalActionPerformed(evt);
            }
        });

        tCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tCariKeyPressed(evt);
            }
        });

        jLabel7.setText("Pencarian");

        jPanel1.setBackground(new java.awt.Color(51, 153, 0));

        jLabel1.setFont(new java.awt.Font("Arial Black", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Data Konsumen");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(73, Short.MAX_VALUE))
        );

        tTgl.setDateFormatString("yyyy-MM-dd");

        cJk.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih Jenis Kelamin", "L", "P" }));
        cJk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cJkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel2)
                    .addComponent(bTambah))
                .addGap(81, 81, 81)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bUbah)
                        .addGap(18, 18, 18)
                        .addComponent(bHapus)
                        .addGap(18, 18, 18)
                        .addComponent(bReset))
                    .addComponent(tNama, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                    .addComponent(tHp)
                    .addComponent(tId)
                    .addComponent(tTgl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cJk, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(88, 88, 88)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 620, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tCari, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bBatal)))
                .addContainerGap(106, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(tId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bBatal)
                        .addComponent(tCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(tNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(tTgl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(cJk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(tHp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bTambah)
                            .addComponent(bHapus)
                            .addComponent(bReset)
                            .addComponent(bUbah)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(226, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void clearText(){
        tId.setText("");
        tNama.setText("");
        tTgl.cleanup();
        //tJk.setText("");
        tHp.setText("");
        tId.setEditable(false);
           //ngerest datenya
         tTgl.setDate(null);
         //

         //ngereset comboboxnya
         cJk.setSelectedIndex(0);
         //
         bTambah.setEnabled(false);
        
    }
    
    private void bTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bTambahActionPerformed
         
         SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
         String date = sdf.format(tTgl.getDate());
         String selectedValue = cJk.getSelectedItem().toString();

          
         String cekNama = tNama.getText();
         String cekTgl = sdf.format(tTgl.getDate());
         String cekGender = cJk.getSelectedItem().toString();
         String cekHp = tHp.getText().trim().replaceAll("\\s","");
         Date cekDate;
         cekDate= tTgl.getDate();
        
        if(cekNama.equals("")&&cekDate == null&&cekGender.equals("Pilih Jenis Kelamin")&&cekHp.equals("")){
          JOptionPane.showMessageDialog(null, "Isi Data Terlebih Dahulu!");
          JOptionPane.showMessageDialog(null, "Data Gagal Ditambahkan!");
        } else if(cekNama.equals("")){
            JOptionPane.showMessageDialog(null, "Nama Konsumen Tidak Boleh Kosong!");
            JOptionPane.showMessageDialog(null, "Data Gagal Ditambahkan!");
        }else if(cekDate == null){
            JOptionPane.showMessageDialog(null, "Tanggal Lahir Tidak Boleh Kosong!");
            JOptionPane.showMessageDialog(null, "Data Gagal Ditambahkan!");
        }else if(cekTgl.equals("")){
            JOptionPane.showMessageDialog(null, "Tanggal Lahir Tidak Boleh Kosong!");
            JOptionPane.showMessageDialog(null, "Data Gagal Ditambahkan!");
        }else if(cekGender.equals("Pilih Jenis Kelamin")){
            JOptionPane.showMessageDialog(null, "Jenis Kelamin Tidak Boleh Kosong!");
            JOptionPane.showMessageDialog(null, "Data Gagal Ditambahkan!");
        }else if(cekHp.equals("")){
            JOptionPane.showMessageDialog(null, "Nomor Telepon Tidak Boleh Kosong!");
            JOptionPane.showMessageDialog(null, "Data Gagal Ditambahkan!");
        } else if(cekHp.length()>12){
            JOptionPane.showMessageDialog(null, "Nomor Telepon Maksimal 12 Digit!");
        }else if(!cekHp.matches("[0-9]+")){
            JOptionPane.showMessageDialog(null, "Format Nomor Telepon Adalah Angka!");
            JOptionPane.showMessageDialog(null, "Data Gagal Ditambahkan!");
        }else{
               if(JOptionPane.showConfirmDialog(null, "Anda Yakin Data Yang Anda Tambahkan Sudah Benar?","Menambahkan Data",JOptionPane.YES_NO_OPTION)== JOptionPane.YES_OPTION){
                   try{
                        st = conn.createStatement();
                        String ifExsist = "SELECT * FROM sys_customer WHERE  customer_name ='"+tNama.getText()+"' && customer_birthdate = '"+date+"' && customer_gender='"+selectedValue+"' && customer_phone = '"+cekHp+"' ";
                        rs = st.executeQuery(ifExsist);
                        if(rs.next()){
                            JOptionPane.showMessageDialog(null,"Data Sudah Pernah Disimpan!");
                            JOptionPane.showMessageDialog(null,"Data Batal Disimpan!");
                        }
                        else{   
                             try{
                                    String sql = "INSERT INTO sys_customer VALUES (NULL,'"+tNama.getText()+"', '"+date+"', '"+selectedValue+"', '"+cekHp+"')";
                                    st = conn.createStatement();
                                    st.executeUpdate(sql);
                                    JOptionPane.showMessageDialog(null,"Data Berhasil Disimpan!");
                                    //ngerest datenya
                                    tTgl.setDate(null);
                                    //
                                    //ngereset comboboxnya
                                    cJk.setSelectedIndex(0);
                                    //
                                    clearText();
                                    tampilData();
                                 }catch(Exception e){
                                      System.out.println("Error 1");
                              }
                        }
                   }catch(Exception e){
                       System.out.println("Error 1");
                   }  
               }
        }
    }//GEN-LAST:event_bTambahActionPerformed

    private void cJkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cJkActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cJkActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
        tampilData();
    }//GEN-LAST:event_formInternalFrameOpened

    private void tCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tCariKeyPressed
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("No");
        model.addColumn("ID");
        model.addColumn("Nama Konsumen");
        model.addColumn("Tanggal Lahir");
        model.addColumn("Jenis Kelamin");
        model.addColumn("Teleon");
      
        try{
            String sql = "SELECT * FROM sys_customer WHERE customer_id LIKE '%"+tCari.getText()+"%' OR customer_name LIKE '%"+tCari.getText()+"%' OR customer_birthdate LIKE '%"+tCari.getText()+"%' OR customer_gender LIKE '%"+tCari.getText()+"%' OR customer_phone LIKE '%"+tCari.getText()+"%'";
            st = conn.createStatement();
            rs = st.executeQuery(sql);
            
            int no = 0;
            while(rs.next()){
                no++;
                model.addRow(new Object []{
                    no,rs.getString("customer_id") ,rs.getString("customer_name"),rs.getString("customer_birthdate"),rs.getString("customer_gender"),rs.getString("customer_phone"),
                    });
            }
            tData.setModel(model);
        }catch(Exception e){
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_tCariKeyPressed

    private void bBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBatalActionPerformed
        // TODO add your handling code here:
        clearTextCari();
    }//GEN-LAST:event_bBatalActionPerformed

    private void bResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bResetActionPerformed
        if(JOptionPane.showConfirmDialog(null, "Yakin Ingin Mereset Inputan?","Reset Data",JOptionPane.YES_NO_OPTION)== JOptionPane.YES_OPTION){
              JOptionPane.showMessageDialog(null,"Berhasil Mereset Inputan!");
              clearText();
          }else{
              JOptionPane.showMessageDialog(null,"Data Inputan Batal Direset!");
          }
    }//GEN-LAST:event_bResetActionPerformed

    private void tDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tDataMouseClicked
        try {
            DefaultTableModel model = (DefaultTableModel)tData.getModel();
            int baris = tData.getSelectedRow();
            bTambah.setEnabled(false);
            
            tId.setText(tData.getModel().getValueAt(baris, 1).toString());
            tNama.setText(tData.getModel().getValueAt(baris, 2).toString());
            Date date = new SimpleDateFormat("yyyy-MM-dd").parse((String)model.getValueAt(baris,3));
            tTgl.setDate(date);
            cJk.setSelectedItem(tData.getModel().getValueAt(baris, 4).toString());
            tHp.setText(tData.getModel().getValueAt(baris, 5).toString());
        } catch (ParseException ex) {
            Logger.getLogger(Data_konsumen.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tDataMouseClicked

    private void bUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bUbahActionPerformed
         SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
         String date = sdf.format(tTgl.getDate());
         String selectedValue = cJk.getSelectedItem().toString();

          
         String cekNama = tNama.getText();
         String cekTgl = sdf.format(tTgl.getDate());
         String cekGender = cJk.getSelectedItem().toString();
         String cekHp = tHp.getText().trim().replaceAll("\\s","");
         String cekId = tId.getText();
        if(cekId.equals("")){
            JOptionPane.showMessageDialog(null, "Tidak Dapat Mengubah Data!");
            JOptionPane.showMessageDialog(null, "Data Gagal Ditambahkan!");
        }else if(cekNama.equals("")){
            JOptionPane.showMessageDialog(null, "Nama Konsumen Tidak Boleh Kosong!");
            JOptionPane.showMessageDialog(null, "Data Gagal Ditambahkan!");
        }else if(cekGender.equals("Pilih Jenis Kelamin")){
            JOptionPane.showMessageDialog(null, "Jenis Kelamin Tidak Boleh Kosong!");
            JOptionPane.showMessageDialog(null, "Data Gagal Ditambahkan!");
        }else if(cekHp.equals("")){
            JOptionPane.showMessageDialog(null, "Nomor Telepon Tidak Boleh Kosong!");
            JOptionPane.showMessageDialog(null, "Data Gagal Ditambahkan!");
        }else if(cekTgl.equals("")){
            JOptionPane.showMessageDialog(null, "Tanggal Lahir Tidak Boleh Kosong!");
            JOptionPane.showMessageDialog(null, "Data Gagal Ditambahkan!");
        }else if(cekHp.length()>12){
            JOptionPane.showMessageDialog(null, "Nomor Telepon Maksimal 12 Digit!");
        }else if(!cekHp.matches("[0-9]+")){
            JOptionPane.showMessageDialog(null, "Format Nomor Telepon Adalah Angka!");
            JOptionPane.showMessageDialog(null, "Data Gagal Ditambahkan!");
        }else{
            if(JOptionPane.showConfirmDialog(null, "Anda Yakin Data Yang Anda Rubah Sudah Benar?","Mengubah Data",JOptionPane.YES_NO_OPTION)== JOptionPane.YES_OPTION){
                 try{
                        st = conn.createStatement();
                        String ifExsist = "SELECT * FROM sys_customer WHERE  customer_name ='"+tNama.getText()+"' && customer_birthdate = '"+date+"' && customer_gender='"+selectedValue+"' && customer_phone = '"+cekHp+"' ";
                        rs = st.executeQuery(ifExsist);
                        if(rs.next()){
                            JOptionPane.showMessageDialog(null,"Data Sudah Pernah Disimpan!");
                            JOptionPane.showMessageDialog(null,"Data Batal Disimpan!");
                        }
                        else{   
                               try{
                                String sql = "UPDATE sys_customer SET customer_name ='"+tNama.getText()+"', customer_birthdate = '"+date+"', customer_gender='"+selectedValue+"',customer_phone = '"+cekHp+"' WHERE customer_id = '"+tId.getText()+"'";
                                st = conn.createStatement();
                                st.executeUpdate(sql);


                                JOptionPane.showMessageDialog(null,"Data Berhasil Disimpan!");
                                tTgl.setDate(null);
                                cJk.setSelectedIndex(0);
                                clearText();
                                tampilData();
                             }catch(Exception e){
                                 System.out.println("Error 1");
                          }
                        }
                 }catch(Exception e){
                     System.out.println("Error 1");
                 }
               }
            }
           
    }//GEN-LAST:event_bUbahActionPerformed

    private void bHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bHapusActionPerformed
        String cekId = tId.getText();
        
        if(cekId.equals("")){
            JOptionPane.showMessageDialog(null, "Pilih Data Yang Akan Dihapus Terlebih Dahulu!");
            JOptionPane.showMessageDialog(null, "Data Gagal Dihapus!");
        }else {
            if(JOptionPane.showConfirmDialog(null, "Anda Yakin Menghapus Data Ini?","Menghapus Data",JOptionPane.YES_NO_OPTION)== JOptionPane.YES_OPTION){
                try{
                   String sql = "DELETE FROM sys_customer WHERE customer_id = '"+tId.getText()+"'";
                   st = conn.createStatement();
                   st.executeUpdate(sql);


                   JOptionPane.showMessageDialog(null,"Data Berhasil Dihapus!");
                   clearText();
                   tampilData();

                }catch(Exception e){
                    System.out.println(e.getMessage());
                }
            }else{
                   JOptionPane.showMessageDialog(null,"Data Batal Dihapus!");
            }
        }
    }//GEN-LAST:event_bHapusActionPerformed
    
      private void clearTextCari(){
        tCari.setText("");
        tampilData();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bBatal;
    private javax.swing.JButton bHapus;
    private javax.swing.JButton bReset;
    private javax.swing.JButton bTambah;
    private javax.swing.JButton bUbah;
    private javax.swing.JComboBox<String> cJk;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField tCari;
    private javax.swing.JTable tData;
    private javax.swing.JTextField tHp;
    private javax.swing.JTextField tId;
    private javax.swing.JTextField tNama;
    private com.toedter.calendar.JDateChooser tTgl;
    // End of variables declaration//GEN-END:variables
}
