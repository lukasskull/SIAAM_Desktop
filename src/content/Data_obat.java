/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package content;


import inc.config;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.sql.Blob;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author LUKAS PUTRA DIANTAMA
 */
public class Data_obat extends javax.swing.JInternalFrame {

    Connection conn = config.Conn();
    Statement st;
    ResultSet rs;
    int idSatuan,idSediaan;
    
    String filename = null;
    byte[] person_image=null;
    
      private void tampilData(){
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("No");
        model.addColumn("ID");
        model.addColumn("Kode Obat");
        model.addColumn("Golongan");
        model.addColumn("Tipe");
        model.addColumn("Nama Obat");
        model.addColumn("Sediaan");
        model.addColumn("Satuan");
        model.addColumn("Harga");
        model.addColumn("Minimal Stok");
        model.addColumn("Stok Terkini");
        model.addColumn("Gambar");
        bTambah.setEnabled(false);
        
      
        try{
            String sql = "SELECT sys_obat.obat_id, obat_barcode,obat_golongan, obat_type,obat_name, sys_sediaan.sediaan_name, sys_satuan.satuan_name,obat_price,obat_photo,obat_min_stock,obat_current_stock FROM sys_obat, sys_sediaan, sys_satuan WHERE sys_obat.obat_sediaan_id = sys_sediaan.sediaan_id AND sys_obat.obat_satuan_id = sys_satuan.satuan_id ORDER BY obat_id ASC";
            st = conn.createStatement();
            rs = st.executeQuery(sql);
            
            int no = 0;
            while(rs.next()){
                no++;
                model.addRow(new Object []{
                    no,rs.getString("obat_id"), rs.getString("obat_barcode"),rs.getString("obat_golongan"),rs.getString("obat_type"),rs.getString("obat_name"),rs.getString("sediaan_name"),rs.getString("satuan_name"),rs.getString("obat_price"),rs.getString("obat_min_stock"),rs.getString("obat_current_stock"),rs.getString("obat_photo"),
                });
            }
            tData.setModel(model);
        }catch(Exception e){
            System.out.println(e.getMessage());
        }
    }
    
    /**
     * Creates new form Data_obat
     */
    public Data_obat() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        tId = new javax.swing.JTextField();
        tKode = new javax.swing.JTextField();
        tGolongan = new javax.swing.JTextField();
        tTipe = new javax.swing.JTextField();
        tNama = new javax.swing.JTextField();
        cSediaan = new javax.swing.JComboBox<>();
        cSatuan = new javax.swing.JComboBox<>();
        tHarga = new javax.swing.JTextField();
        tStok = new javax.swing.JTextField();
        tCurrentStock = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tData = new javax.swing.JTable()
        {
            public boolean isCellEditable(int rowIndex, int colIndex)
            {
                return false;
            }
        };
        bTambah = new javax.swing.JButton();
        bUbah = new javax.swing.JButton();
        bHapus = new javax.swing.JButton();
        bReset = new javax.swing.JButton();
        bBatal = new javax.swing.JButton();
        tCari = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        bImage = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        tLabel = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        tNamaGambar = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();

        setClosable(true);
        setMaximizable(true);
        setMaximumSize(new java.awt.Dimension(1301, 1200));
        setPreferredSize(new java.awt.Dimension(1301, 632));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(51, 153, 0));

        jLabel1.setFont(new java.awt.Font("Arial Black", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Data Obat");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(73, Short.MAX_VALUE))
        );

        jLabel2.setText("ID");

        jLabel3.setText("Kode Obat");

        jLabel4.setText("Golongan Obat");

        jLabel5.setText("Tipe");

        jLabel6.setText("Nama Obat");

        jLabel7.setText("Sediaan Obat");

        jLabel8.setText("Satuan Obat");

        jLabel9.setText("Harga Obat");

        jLabel10.setText("Minimal Stok");

        jLabel11.setText("Stok Terkini");

        tId.setEditable(false);

        cSediaan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih Sediaan" }));
        cSediaan.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cSediaanPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        cSediaan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cSediaanActionPerformed(evt);
            }
        });

        cSatuan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih Satuan" }));
        cSatuan.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cSatuanPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        tHarga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tHargaActionPerformed(evt);
            }
        });

        tCurrentStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tCurrentStockActionPerformed(evt);
            }
        });

        jScrollPane1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jScrollPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane1MouseClicked(evt);
            }
        });

        tData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "ID", "Kode Obat", "Golongan", "Tipe", "Nama Obat", "Sediaan", "Satuan", "Harga", "Minimal Stok", "Stok Terkini", "Gambar"
            }
        ));
        tData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tDataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tData);

        bTambah.setText("Tambah");
        bTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bTambahActionPerformed(evt);
            }
        });

        bUbah.setText("Ubah");
        bUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bUbahActionPerformed(evt);
            }
        });

        bHapus.setText("Hapus");
        bHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bHapusActionPerformed(evt);
            }
        });

        bReset.setText("Reset");
        bReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bResetActionPerformed(evt);
            }
        });

        bBatal.setText("Batal");
        bBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBatalActionPerformed(evt);
            }
        });

        tCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tCariKeyPressed(evt);
            }
        });

        jLabel12.setText("Pencarian");

        bImage.setText("Pilih Gambar");
        bImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bImageMouseClicked(evt);
            }
        });
        bImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bImageActionPerformed(evt);
            }
        });

        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));

        tLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tLabel.setMaximumSize(new java.awt.Dimension(118, 107));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel13.setText("Masukkan Nama Gambar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(42, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(47, 47, 47)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(tKode, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tGolongan)
                                    .addComponent(tId, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8))
                                .addGap(54, 54, 54)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(cSatuan, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(tNama, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(cSediaan, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(tTipe, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(bTambah))
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bUbah)
                                .addGap(18, 18, 18)
                                .addComponent(bHapus)
                                .addGap(18, 18, 18)
                                .addComponent(bReset)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tCurrentStock, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                                    .addComponent(tStok, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(tHarga, javax.swing.GroupLayout.Alignment.TRAILING))))))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 788, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(tNamaGambar)
                                    .addGap(18, 18, 18)
                                    .addComponent(bImage)
                                    .addGap(145, 145, 145)
                                    .addComponent(jLabel12)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(tCari, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(bBatal)))
                            .addComponent(jLabel13))
                        .addContainerGap(37, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel14)
                        .addGap(181, 181, 181))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 31, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addComponent(jLabel14)))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(bBatal)
                                .addComponent(tCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel12))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(tNamaGambar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(bImage)))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(tId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3))
                            .addComponent(tKode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(tGolongan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tTipe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(cSediaan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(cSatuan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(tHarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(tStok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(tCurrentStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bTambah, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(bUbah)
                                .addComponent(bHapus)
                                .addComponent(bReset)))))
                .addGap(31, 31, 31))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tHargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tHargaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tHargaActionPerformed

    private void tCurrentStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tCurrentStockActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tCurrentStockActionPerformed

    private void bTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bTambahActionPerformed

            String cekKode = tKode.getText().trim().replaceAll("\\s","");
            String cekGolongan = tGolongan.getText();
            String cekType = tTipe.getText();
            String cekNama = tNama.getText();
            String cekSediaan = cSediaan.getSelectedItem().toString();
            String cekSatuan = cSatuan.getSelectedItem().toString();
            String cekHarga = tHarga.getText().trim().replaceAll("\\s","");;
            String cekMinimalStok = tStok.getText().trim().replaceAll("\\s","");
            String cekStokTerkini = tCurrentStock.getText().trim().replaceAll("\\s","");
            String cekNamaGambar = tNamaGambar.getText().trim();
            
          
            
            
            if(cekNama.equals("")&&cekKode.equals("")&&cekGolongan.equals("")&&cekSediaan.equals("Pilih Sediaan")&&cekSatuan.equals("Pilih Satuan")&&cekMinimalStok.equals("")){
                JOptionPane.showMessageDialog(null, "Isi Data Terlebih Dahulu!");
                JOptionPane.showMessageDialog(null, "Data Gagal Ditambahkan!");
            }else if(cekNama.equals("")){
                JOptionPane.showMessageDialog(null, "Nama Obat Tidak Boleh Kosong!");
                JOptionPane.showMessageDialog(null, "Data Gagal Ditambahkan!");
            }else if(cekKode.equals("")){
                JOptionPane.showMessageDialog(null, "Kode Obat Tidak Boleh Kosong!");
                JOptionPane.showMessageDialog(null, "Data Gagal Ditambahkan!");
            }else if(cekGolongan.equals("")){
                JOptionPane.showMessageDialog(null, "Golongan Obat Tidak Boleh Kosong!");
                JOptionPane.showMessageDialog(null, "Data Gagal Ditambahkan!");
            }else if(cekType.equals("")){
                JOptionPane.showMessageDialog(null, "Tipe Tidak Boleh Kosong!");
                JOptionPane.showMessageDialog(null, "Data Gagal Ditambahkan!");
            }else if(cekSediaan.equals("Pilih Sediaan")){
                JOptionPane.showMessageDialog(null, "Pilih Sediaan Obat!");
                JOptionPane.showMessageDialog(null, "Data Gagal Ditambahkan!");
            }else if(cekSatuan.equals("Pilih Satuan")){
                JOptionPane.showMessageDialog(null, "Pilih Satuan Obat!");
                JOptionPane.showMessageDialog(null, "Data Gagal Ditambahkan!");
            }else if(cekMinimalStok.equals("")){
                JOptionPane.showMessageDialog(null, "Minimal Stok Tidak Boleh Kosong!");
                JOptionPane.showMessageDialog(null, "Data Gagal Ditambahkan!");
            }else if(cekStokTerkini.equals("")){
                JOptionPane.showMessageDialog(null, "Stok Terkini Tidak Boleh Kosong!");
                JOptionPane.showMessageDialog(null, "Data Gagal Ditambahkan!");
            }else if(!cekMinimalStok.matches("[0-9]+")||!cekStokTerkini.matches("[0-9]+")){
                JOptionPane.showMessageDialog(null, "Format Stok Adalah Angka!");
                JOptionPane.showMessageDialog(null, "Data Gagal Ditambahkan!");
            }else if(cekHarga.equals("")){
                JOptionPane.showMessageDialog(null, "Harga Obat Tidak Boleh Kosong!");
                JOptionPane.showMessageDialog(null, "Data Gagal Ditambahkan!");
            }else if(!cekHarga.matches("[0-9]+")){
                JOptionPane.showMessageDialog(null, "Format Harga Adalah Angka!");
                JOptionPane.showMessageDialog(null, "Data Gagal Ditambahkan!");
            }else if(cekNamaGambar.equals("")){
                JOptionPane.showMessageDialog(null, "Nama Gambar Tidak Boleh Kosong!");
                JOptionPane.showMessageDialog(null, "Data Gagal Ditambahkan!");
            }else{
                if(JOptionPane.showConfirmDialog(null, "Anda Yakin Data Yang Anda Tambahkan Sudah Benar?","Menambahkan Data",JOptionPane.YES_NO_OPTION)== JOptionPane.YES_OPTION){
                    try{
                        st = conn.createStatement();
                        String ifExsist = "SELECT * FROM sys_obat WHERE obat_barcode = '"+cekKode+"' && obat_golongan = '"+cekGolongan+"' && obat_type = '"+cekType+"' && obat_name = '"+cekNama+"' && obat_sediaan_id = '"+cekSediaan+"' && obat_satuan_id = '"+cekSatuan+"' && obat_price = '"+tHarga.getText()+"' && obat_min_stock = '"+tStok.getText()+"' && obat_current_stock = '"+tCurrentStock.getText()+"' ";
                        rs = st.executeQuery(ifExsist);
                        if(rs.next()){
                            JOptionPane.showMessageDialog(null,"Data Sudah Pernah Disimpan!");
                            JOptionPane.showMessageDialog(null,"Data Batal Disimpan!");
                        }
                        else{
                            
                            try{
                                
                                String sql = "INSERT INTO sys_obat VALUES(NULL,'"+cekKode+"','"+cekGolongan+"','"+cekType+"','"+cekNama+"','"+idSediaan+"', '"+idSatuan+"','"+tHarga.getText()+"',?,?,'"+tStok.getText()+"','"+tCurrentStock.getText()+"')";
                                
                                PreparedStatement ps = (PreparedStatement) conn.prepareStatement(sql);
                                ps.setString(1,tNamaGambar.getText());
                                fis = new FileInputStream(f);
                                ps.setBinaryStream(2,fis,(int) f.length());
                                ps.execute();
                                
                                
                                JOptionPane.showMessageDialog(null,"Data Berhasil Disimpan!");
                                clearText();
                                tampilData();
                                
                                
                            }catch(Exception e){
                                System.out.println("Error 1");
                            }
                        }
                    }catch(Exception e){
                        System.out.println("Error 2");
                    }
                    
                    
                    //////
                    try{
                    
                    }catch(Exception e){
                    
                    
                    }
                }else{
                    JOptionPane.showMessageDialog(null,"Data Batal Disimpan!");
                }
            }
       
    }//GEN-LAST:event_bTambahActionPerformed

    private void clearText(){
      tId.setText("");
      tKode.setText("");
      tGolongan.setText("");
      tTipe.setText("");
      tNama.setText("");
      cSediaan.setSelectedIndex(0);
      cSatuan.setSelectedIndex(0);
      tHarga.setText("");
      tStok.setText("");
      tCurrentStock.setText("");
      //tGambar.setText("");
      tId.setEditable(false);
      bReset.setEnabled(true);
      tNamaGambar.setText("");
      tLabel.setText("");
        
    }
    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
         try{
          tampilData();
          String sql = "SELECT * FROM sys_sediaan";
          conn = config.Conn();
          st = conn.createStatement();
          rs = st.executeQuery(sql);
          
           while(rs.next()){
               cSediaan.addItem(rs.getString("sediaan_name"));
           }
      }catch(Exception e){
          System.out.println(e.getMessage());
      }  
      //////////////////////////////////////////////
       try{
          String sql = "SELECT * FROM sys_satuan";
          conn = config.Conn();
          st = conn.createStatement();
          rs = st.executeQuery(sql);
          
          
           while(rs.next()){
               cSatuan.addItem(rs.getString("satuan_name"));
           }
      }catch(Exception e){
          System.out.println(e.getMessage());
      } 
    }//GEN-LAST:event_formInternalFrameOpened

    private void bImageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bImageMouseClicked
        
    }//GEN-LAST:event_bImageMouseClicked

    private void bImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bImageActionPerformed
      JFileChooser j = new JFileChooser();
      j.showOpenDialog(null);
      j.getSelectedFile();
      f = j.getSelectedFile();
      filename = f.getAbsolutePath();
      ImageIcon imageIcon = new ImageIcon(filename);
      tLabel.setIcon(imageIcon);
      bTambah.setEnabled(true);
    }//GEN-LAST:event_bImageActionPerformed

    private void cSediaanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cSediaanActionPerformed
        
    }//GEN-LAST:event_cSediaanActionPerformed

    private void cSediaanPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cSediaanPopupMenuWillBecomeInvisible
          try{
            String sql = "SELECT * FROM sys_sediaan WHERE sediaan_name = '"+cSediaan.getSelectedItem()+"'";
            conn = config.Conn();
            st = conn.createStatement();
            rs = st.executeQuery(sql);


             if(rs.next()){
                 idSediaan = rs.getInt("sediaan_id");
             }
        }catch(Exception e){
            System.out.println(e.getMessage());
        } 
    }//GEN-LAST:event_cSediaanPopupMenuWillBecomeInvisible

    private void cSatuanPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cSatuanPopupMenuWillBecomeInvisible
         try{
          String sql = "SELECT * FROM sys_satuan WHERE satuan_name = '"+cSatuan.getSelectedItem()+"'";
          conn = config.Conn();
          st = conn.createStatement();
          rs = st.executeQuery(sql);
          
          
           if(rs.next()){
               idSatuan = rs.getInt("satuan_id");
           }
      }catch(Exception e){
          System.out.println(e.getMessage());
      } 
    }//GEN-LAST:event_cSatuanPopupMenuWillBecomeInvisible

    private void tDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tDataMouseClicked
        int baris = tData.getSelectedRow();
        
        tId.setText(tData.getModel().getValueAt(baris, 1).toString());
        tKode.setText(tData.getModel().getValueAt(baris, 2).toString());
        tGolongan.setText(tData.getModel().getValueAt(baris, 3).toString());
        tTipe.setText(tData.getModel().getValueAt(baris, 4).toString());
        tNama.setText(tData.getModel().getValueAt(baris, 5).toString());
        cSediaan.setSelectedItem(tData.getModel().getValueAt(baris, 6).toString());
        cSatuan.setSelectedItem(tData.getModel().getValueAt(baris, 7).toString());
        tHarga.setText(tData.getModel().getValueAt(baris, 8).toString());
        tStok.setText(tData.getModel().getValueAt(baris, 9).toString());
        tCurrentStock.setText(tData.getModel().getValueAt(baris, 10).toString());
        tNamaGambar.setText(tData.getModel().getValueAt(baris, 11).toString());
        String obat_photo = (String) tData.getValueAt(baris, 11);
        config buka = new config();
        try {
            Statement st = (Statement) conn.createStatement();
            String tampil = "SELECT * FROM sys_obat WHERE obat_photo = '"+obat_photo+"'";
            ResultSet rs = st.executeQuery(tampil);
            while(rs.next()){
                Blob obat_blob = (Blob) rs.getBlob("obat_blob");
                int ukuran = (int) (obat_blob.length());
                ImageIcon tampilkan = new ImageIcon(obat_blob.getBytes(1, ukuran));
                tLabel.setIcon(tampilkan);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Data_obat.class.getName()).log(Level.SEVERE, null, ex);
        }
        bTambah.setEnabled(false);
    }//GEN-LAST:event_tDataMouseClicked

   
    private void bUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bUbahActionPerformed
         //amibl id role
         try{
          String sql = "SELECT * FROM sys_sediaan WHERE sediaan_name = '"+cSediaan.getSelectedItem()+"'";
          conn = config.Conn();
          st = conn.createStatement();
          rs = st.executeQuery(sql);
          
          
           if(rs.next()){
               idSediaan = rs.getInt("sediaan_id");
           }
           
           ///
           
        }catch(Exception e){
            System.out.println(e.getMessage());
        } 

        //ambil id outlet
          try{
            String sql = "SELECT * FROM sys_satuan WHERE satuan_name = '"+cSatuan.getSelectedItem()+"'";
            conn = config.Conn();
            st = conn.createStatement();
            rs = st.executeQuery(sql);


             if(rs.next()){
                 idSatuan = rs.getInt("satuan_id");
             }
        }catch(Exception e){
            System.out.println(e.getMessage());
        } 
        
        //Ubah
            
        String cekKode = tKode.getText().trim().replaceAll("\\s","");
        String cekGolongan = tGolongan.getText();
        String cekType = tTipe.getText();
        String cekNama = tNama.getText();
        String cekSediaan = cSediaan.getSelectedItem().toString();
        String cekSatuan = cSatuan.getSelectedItem().toString();
        String cekHarga = tHarga.getText().trim().replaceAll("\\s","");;
        String cekMinimalStok = tStok.getText().trim().replaceAll("\\s","");
        String cekStokTerkini = tCurrentStock.getText().trim().replaceAll("\\s","");
        String cekNamaGambar = tNamaGambar.getText().trim();
        
        
        
        //String cekGambar = tGambar.getText();
        
        if(cekNama.equals("")&&cekKode.equals("")&&cekGolongan.equals("")&&cekSediaan.equals("Pilih Sediaan")&&cekSatuan.equals("Pilih Satuan")&&cekMinimalStok.equals("")){
          JOptionPane.showMessageDialog(null, "Isi Data Terlebih Dahulu!");
          JOptionPane.showMessageDialog(null, "Data Gagal Ditambahkan!");
        } else if(cekNama.equals("")){
            JOptionPane.showMessageDialog(null, "Nama Obat Tidak Boleh Kosong!");
            JOptionPane.showMessageDialog(null, "Data Gagal Ditambahkan!");
        }else if(cekKode.equals("")){
            JOptionPane.showMessageDialog(null, "Kode Obat Tidak Boleh Kosong!");
            JOptionPane.showMessageDialog(null, "Data Gagal Ditambahkan!");
        }else if(cekGolongan.equals("")){
            JOptionPane.showMessageDialog(null, "Golongan Obat Tidak Boleh Kosong!");
            JOptionPane.showMessageDialog(null, "Data Gagal Ditambahkan!");
        }else if(cekType.equals("")){
            JOptionPane.showMessageDialog(null, "Tipe Tidak Boleh Kosong!");
            JOptionPane.showMessageDialog(null, "Data Gagal Ditambahkan!");
        }else if(cekSediaan.equals("Pilih Sediaan")){
            JOptionPane.showMessageDialog(null, "Pilih Sediaan Obat!");
            JOptionPane.showMessageDialog(null, "Data Gagal Ditambahkan!");
        }else if(cekSatuan.equals("Pilih Satuan")){
            JOptionPane.showMessageDialog(null, "Pilih Satuan Obat!");
            JOptionPane.showMessageDialog(null, "Data Gagal Ditambahkan!");
        }else if(cekMinimalStok.equals("")){
            JOptionPane.showMessageDialog(null, "Minimal Stok Tidak Boleh Kosong!");
            JOptionPane.showMessageDialog(null, "Data Gagal Ditambahkan!");
        }else if(cekMinimalStok.equals("")){
            JOptionPane.showMessageDialog(null, "Harga Tidak Boleh Kosong!");
            JOptionPane.showMessageDialog(null, "Data Gagal Ditambahkan!");
        }else if(cekNamaGambar.equals("")){
            JOptionPane.showMessageDialog(null, "Nama Gambar Tidak Boleh Kosong!");
            JOptionPane.showMessageDialog(null, "Data Gagal Ditambahkan!");
        }else if(cekStokTerkini.equals("")){
            JOptionPane.showMessageDialog(null, "Stok Terkini Tidak Boleh Kosong!");
            JOptionPane.showMessageDialog(null, "Data Gagal Ditambahkan!");
        }else if(!cekMinimalStok.matches("[0-9]+")||!cekStokTerkini.matches("[0-9]+")){
            JOptionPane.showMessageDialog(null, "Format Stok Adalah Angka!");
            JOptionPane.showMessageDialog(null, "Data Gagal Ditambahkan!");
        }else if(!cekHarga.matches("[0-9]+")){
            JOptionPane.showMessageDialog(null, "Format Harga Adalah Angka!");
            JOptionPane.showMessageDialog(null, "Data Gagal Ditambahkan!");
        }else{
             if(JOptionPane.showConfirmDialog(null, "Anda Yakin Data Yang Anda Tambahkan Sudah Benar?","Mengubah Data",JOptionPane.YES_NO_OPTION)== JOptionPane.YES_OPTION){
                try{
                        st = conn.createStatement();
                        String ifExsist = "SELECT * FROM sys_obat WHERE obat_barcode = '"+cekKode+"' && obat_golongan = '"+cekGolongan+"' && obat_type = '"+cekType+"' && obat_name = '"+cekNama+"' && obat_sediaan_id = '"+cekSediaan+"' && obat_satuan_id = '"+cekSatuan+"' && obat_price = '"+tHarga.getText()+"' && obat_photo = '' && obat_min_stock = '"+tStok.getText()+"' && obat_current_stock = '"+tCurrentStock.getText()+"' ";
                        rs = st.executeQuery(ifExsist);
                        if(rs.next()){
                            JOptionPane.showMessageDialog(null,"Data Sudah Pernah Disimpan!");
                            JOptionPane.showMessageDialog(null,"Data Batal Disimpan!");
                        }
                        else{   
                              

                                   try{    
                                    // String sql = "UPDATE sys_obat SET obat_barcode ='"+cekKode+"', obat_golongan = '"+cekGolongan+"', obat_type = '"+cekType+"', obat_name = '"+cekNama+"', obat_sediaan_id = '"+idSediaan+"', obat_satuan_id = '"+idSatuan+"', obat_price = '"+tHarga.getText()+"', obat_photo = '', obat_min_stock = '"+tStok.getText()+"', obat_current_stock='"+tCurrentStock.getText()+"' WHERE obat_id = '"+tId.getText()+"'";
                                   //  st = conn.createStatement();
                                   //  st.executeUpdate(sql);

                                   //  JOptionPane.showMessageDialog(null,"Data Berhasil Disimpan!");
                                   //  clearText();
                                  //   tampilData();
                                     
                                     
                                     ///
                            String sql = "UPDATE sys_obat SET obat_barcode = '"+cekKode+"',obat_golongan = '"+cekGolongan+"',obat_type = '"+cekType+"',obat_name = '"+cekNama+"',obat_sediaan_id = '"+idSediaan+"', obat_satuan_id = '"+idSatuan+"',obat_price = '"+tHarga.getText()+"',obat_photo = ?,obat_blob=?,obat_min_stock = '"+tStok.getText()+"',obat_current_stock = '"+tCurrentStock.getText()+"' WHERE obat_id = '"+tId.getText()+"'";
                                
                            PreparedStatement ps = (PreparedStatement) conn.prepareStatement(sql);
                            ps.setString(1,tNamaGambar.getText());
                            fis = new FileInputStream(f);
                            ps.setBinaryStream(2,fis,(int) f.length());
                            ps.executeUpdate();


                            JOptionPane.showMessageDialog(null,"Data Berhasil Diubah!");
                            clearText();
                            tampilData();

                              }catch(Exception e){
                                  System.out.println("Error 1");
                              }
                        }
                }catch(Exception e){
                      System.out.println("Error 2");
                }
             }else{
                   JOptionPane.showMessageDialog(null,"Data Batal Disimpan!");
             }
        }    
    }//GEN-LAST:event_bUbahActionPerformed

    private void bHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bHapusActionPerformed
        String cekId = tId.getText();
      
        
        if(cekId.equals("")){
            JOptionPane.showMessageDialog(null, "Pilih Data Yang Akan Dihapus Terlebih Dahulu!");
            JOptionPane.showMessageDialog(null, "Data Gagal Dihapus!");
        }else {
            if(JOptionPane.showConfirmDialog(null, "Anda Yakin Menghapus Data Ini?","Menghapus Data",JOptionPane.YES_NO_OPTION)== JOptionPane.YES_OPTION){
               
                ////////////
                try{
                   String sql = "DELETE FROM sys_obat WHERE obat_id = '"+tId.getText()+"'";
                   st = conn.createStatement();
                   st.executeUpdate(sql);


                   JOptionPane.showMessageDialog(null,"Data Berhasil Dihapus!");
                   clearText();
                   tampilData();

                }catch(Exception e){
                    System.out.println(e.getMessage());
                }
            }else{
                   JOptionPane.showMessageDialog(null,"Data Batal Dihapus!");
            }
            
        }
    }//GEN-LAST:event_bHapusActionPerformed

    private void bResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bResetActionPerformed
          if(JOptionPane.showConfirmDialog(null, "Yakin Ingin Mereset Inputan?","Reset Data",JOptionPane.YES_NO_OPTION)== JOptionPane.YES_OPTION){
              JOptionPane.showMessageDialog(null,"Berhasil Mereset Inputan!");
              clearText();
              bTambah.setEnabled(false);
         }else{
              JOptionPane.showMessageDialog(null,"Data Inputan Batal Direset!");
          }
    }//GEN-LAST:event_bResetActionPerformed

    private void jScrollPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jScrollPane1MouseClicked

    private void tCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tCariKeyPressed
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("No");
        model.addColumn("ID");
        model.addColumn("Kode Obat");
        model.addColumn("Golongan");
        model.addColumn("Tipe");
        model.addColumn("Nama Obat");
        model.addColumn("Sediaan");
        model.addColumn("Satuan");
        model.addColumn("Harga");
        model.addColumn("Minimal Stok");
        model.addColumn("Stok Terkini");
        model.addColumn("Gambar");
        try{
            //String sql = "SELECT * FROM sys_obat, sys_sediaan, sys_satuan  WHERE obat_barcode LIKE '%"+tCari.getText()+"%' OR obat_golongan LIKE '%"+tCari.getText()+"%' OR obat_type LIKE '%"+tCari.getText()+"%' OR obat_name LIKE '%"+tCari.getText()+"%'";
            String sql = "SELECT * FROM sys_obat "
                    + "INNER JOIN sys_sediaan ON sys_sediaan.sediaan_id = sys_obat.obat_sediaan_id "
                    + "INNER JOIN sys_satuan ON sys_satuan.satuan_id = sys_obat.obat_satuan_id "
                    + "WHERE obat_barcode LIKE '%"+tCari.getText()+"%' OR obat_golongan LIKE '%"+tCari.getText()+"%' OR obat_type LIKE '%"+tCari.getText()+"%' OR obat_name LIKE '%"+tCari.getText()+"%'";
           //FROM sys_obat, sys_sediaan, sys_satuan WHERE sys_obat.obat_sediaan_id = sys_sediaan.sediaan_id AND sys_obat.obat_satuan_id = sys_satuan.satuan_id ORDER BY obat_id ASC";
            st = conn.createStatement();
            rs = st.executeQuery(sql);
            
            int no = 0;
            while(rs.next()){
                no++;
                model.addRow(new Object []{
                    no,rs.getString("obat_id"), rs.getString("obat_barcode"),rs.getString("obat_golongan"),rs.getString("obat_type"),rs.getString("obat_name"),rs.getString("sediaan_name"),rs.getString("satuan_name"),rs.getString("obat_price"),rs.getString("obat_min_stock"),rs.getString("obat_current_stock"),rs.getString("obat_photo"),
                });
            }
            tData.setModel(model);
        }catch(Exception e){
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_tCariKeyPressed

    private void bBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBatalActionPerformed
        clearTextCari();
    }//GEN-LAST:event_bBatalActionPerformed
    
     private void clearTextCari(){
        tCari.setText("");
        tampilData();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bBatal;
    private javax.swing.JButton bHapus;
    private javax.swing.JButton bImage;
    private javax.swing.JButton bReset;
    private javax.swing.JButton bTambah;
    private javax.swing.JButton bUbah;
    private javax.swing.JComboBox<String> cSatuan;
    private javax.swing.JComboBox<String> cSediaan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField tCari;
    private javax.swing.JTextField tCurrentStock;
    private javax.swing.JTable tData;
    private javax.swing.JTextField tGolongan;
    private javax.swing.JTextField tHarga;
    private javax.swing.JTextField tId;
    private javax.swing.JTextField tKode;
    private javax.swing.JLabel tLabel;
    private javax.swing.JTextField tNama;
    private javax.swing.JTextField tNamaGambar;
    private javax.swing.JTextField tStok;
    private javax.swing.JTextField tTipe;
    // End of variables declaration//GEN-END:variables
    
    private File f;
    private FileInputStream fis;
    int generatedKey = 0;
}
